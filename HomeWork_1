#include <p32xxxx.h>//   IN-OUT     
#pragma config FPLLMUL = MUL_20, FPLLIDIV = DIV_2, FPLLODIV = DIV_1, FWDTEN = OFF
#pragma config POSCMOD = HS, FNOSC = PRIPLL, FPBDIV = DIV_8
const int NORMAL = 1;
const int REVERSE = -1;
const int HIGH_DELAY = 64000;
const int LOW_DELAY = 32000;
int delayTime=LOW_DELAY;
int x=0;
int x_right =0x8;
int x_left =0xA;



void fan(int nDirection,int delayTime)
{
    PORTF=4;

	if (nDirection==1)&&(x_right==0)	// 
			x_right=0x8;
	else
		if (nDirection==-1)&&(x_left==256)
			x_left=0xA;

	if (nDirection == 1) 
	{
		x_right = right*2;
		x_left = left/2;
	}
	else
	{
		x_right = right/2;
		x_left = left*2;		
	}
	PORTE= right||left ;  //OR
	PORTDbits.RD4=1;
	PORTDbits.RD4=0;
		
	}	
}


void counter(int nDirection,int delayTime)
{
    PORTF=4;
	if (nDirection==1)&&(x==256)	// Run between 0-256
			x=0;
	else
		if (nDirection==-1)&&(x==0)
			x=256;

	x += nDirection;
	PORTE=x;
	PORTDbits.RD4=1;
	PORTDbits.RD4=0;
	for(i = 0; i < delayTime; i++);
}

void shift(int nDirection,int delayTime)
{
    PORTF=4;
	if (nDirection==1)&&(x==256)	// Run between 0-256
			x=0;
	else
		if (nDirection==-1)&&(x==0)
			x=256;

	if (nDirection == 1) 
		x = x*2;
	else
		x = x/2;
	PORTE=x;
	PORTDbits.RD4=1;
	PORTDbits.RD4=0;
	for(i = 0; i < delayTime; i++);
}



void main(void)
{
	int s0, s1, s2, s3, s4, s5, s6, s7;

	int x;	
	TRISE=0;
    TRISF=0;
    TRISD=0;

	while(1)
	{
		// Receive switches input
		TRISE=0xff;
        PORTF=3;
        PORTDbits.RD4=1;
        PORTDbits.RD4=0; 
        x=PORTE;

		// Interpret each switch
		s0=x&1;
		s1=x&2;
		s2=x&4;
		s3=x&8;
		s4=x&16;
		s5=x&32;
		s6=x&64;
		s7=x&128;

		// Send leds output
        TRISE=0; 
        PORTF=4;
        PORTE=0;
    	PORTDbits.RD4=1;
		PORTDbits.RD4=0;

		while(s7 == 0)		// exit
		{
			if (s4 == 0)	// choose nDirection
			{
				nDirection = NORMAL;
			}
			else
			{
				nDirection = REVERSE;
			}

			if (s4 == 0)	// Delay
			{
				delayTime = LOW_DELAY;
			}
			else
			{
				delayTime = HIGH_DELAY;
			}

			if (s6 == 0)	// Turn on buzzer
			{
				TRISG=0;			// IO out for buzzer . is it PORTG ???
				PORTG15=1;
				PORTDbits.RD4=1;	// Refresh ???
				PORTDbits.RD4=0;
			}
			else			// Turn off
			{
				TRISG=0;			// 
				PORTG15=0;
				PORTDbits.RD4=1;	// 
				PORTDbits.RD4=0;
			}

			if (s5 != 0)
			{
				if (s2 == 0)	// fan
				{
					fan(nDirection,delayTime);
				}
				else
				{
					if (s1 == 0) 	// fanOneDirection
					{
						shift(nDirection,delayTime);
					}
					else
					{
						if (s0 == 0)	// fan
						{
							counter(nDirection,delayTime);
						}
					}
				}

			}

		}
		turnOff();
	}
}
